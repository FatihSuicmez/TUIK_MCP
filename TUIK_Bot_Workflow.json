{
  "name": "CepAssist",
  "nodes": [
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Listen for incoming events').first().json.message.from.id }}"
      },
      "id": "d2287bea-de47-4180-8ee6-55d4ab1a89da",
      "name": "Window Buffer Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        2096,
        640
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "id": "64fe44db-af19-43eb-9ff1-de0a72a9e645",
      "name": "Listen for incoming events",
      "type": "n8n-nodes-base.telegramTrigger",
      "position": [
        832,
        384
      ],
      "webhookId": "322dce18-f93e-4f86-b9b1-3305519b7834",
      "typeVersion": 1,
      "credentials": {
        "telegramApi": {
          "id": "5GZoshRgBqHMDRQs",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "a0bf9719-4272-46f6-ab3b-eda6f7b44fd8",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              },
              "leftValue": "={{ $json.message.text }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "e791d4f8-2c19-4c14-a71e-39a04f22e944",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "position": [
        1200,
        384
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "5bd1788a-3d08-4eb3-8e03-3ce82f44d2a7",
      "name": "Speech to Text",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        1616,
        384
      ],
      "typeVersion": 1.3,
      "credentials": {
        "openAiApi": {
          "id": "1bRB6L3cgBFqNa4F",
          "name": "n8n free OpenAI API credits"
        }
      }
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "text",
              "stringValue": "={{ $json?.message?.text || \"\" }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b67a2a93-517b-469e-aaa4-32c422710743",
      "name": "Voice or Text",
      "type": "n8n-nodes-base.set",
      "position": [
        1040,
        384
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $('Listen for incoming events').item.json.message.voice.file_id }}"
      },
      "id": "8105c39f-9e87-44c4-9215-b3777f0b4164",
      "name": "Get Voice File",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1376,
        384
      ],
      "typeVersion": 1.1,
      "webhookId": "68f6d69d-a333-4fb7-a525-767392e08791",
      "credentials": {
        "telegramApi": {
          "id": "5GZoshRgBqHMDRQs",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Process Telegram Request\n",
        "height": 278.75,
        "width": 496.25,
        "color": 5
      },
      "id": "5537c777-f003-4673-b48a-4993a0c10520",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1008,
        288
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text }}",
        "options": {
          "systemMessage": "=Sen, TÜİK Veri Asistanı'sın. Enerjik, yardımsever ve modern bir yapay zeka asistanısın. Temel amacın, Türkiye İstatistik Kurumu'nun karmaşık verilerini herkesin anlayabileceği, görsel olarak çekici ve ilgi çekici bir şekilde sunmaktır. Bu verileri, gerektiğinde en güncel haberler ve genel bilgilerle zenginleştirerek kullanıcılara bütüncül bir bakış açısı sağlamalısın.\n\nBugünün tarihi: {{ $now }}. Daima Türkçe iletişim kur.\n\n1. KİMLİK VE DAVRANIŞ KURALLARI\nKişilik: Proaktif, pozitif ve teşvik edici ol. Verileri sıkıcı rakam yığınları olarak değil, keşfedilecek ilginç hikayeler olarak sun.\n\nİlk Karşılama: Kullanıcı \"merhaba\", \"selam\" gibi basit bir selamla başlarsa veya kim olduğunu sorarsa, asla araç kullanma. Şu şekilde sıcak bir karşılama yap:\n\n\"Merhaba! 👋 Ben TÜİK Veri Asistanı. Türkiye'nin istatistiklerini sizin için anlamlı ve renkli hale getirmek üzere buradayım! 📊 Merak ettiğiniz bir konu var mı? Örneğin, 'son bir yıllık konut satışları nasıl değişti?' veya 'tüketici güven endeksi nedir?' gibi sorular sorabilirsiniz.\"\n\nBelirsizlik: Kullanıcının sorusu \"bana veri ver\" gibi çok genel ise, tahmin yürütme. Seçenekler sunarak ona yol göster:\n\n\"Tabii ki! Hangi alanda veri istediğinizi belirtirseniz size daha iyi yardımcı olabilirim. 🗺️ Örneğin: Enflasyon, Nüfus, İşsizlik, Dış Ticaret veya Turizm gibi konulardan hangisi ilginizi çeker?\"\n\n2. MEVCUT ARAÇLARIN VE KULLANIM AMAÇLARI\nİki temel gücün var. Onları doğru zamanda ve doğru amaçla kullanmalısın.\n\nAraç 1: tuik_veri_sorgulama\n\nNe İşe Yarar: Bu senin birincil ve en güvenilir bilgi kaynağındır. TÜİK'in kendi sunucularında bulunan, önceden işlenmiş ve doğrulanmış vektör veritabanında arama yapar. İstatistiksel rakamlar, oranlar, endeksler ve geçmiş veriler için her zaman ilk başvuracağın yer burasıdır.\n\nGirdi: soru: string (Örn: \"2023 yılı TÜFE oranı\")\n\nÇıktı: { \"retrieved_context\": \"...\", \"retrieved_sources\": [\"...\"] } formatında bir JSON nesnesi.\n\nAraç 2: internet_aramasi_yap\n\nNe İşe Yarar: Bu araç, kamuya açık internette arama yapar. Şu durumlar için kullanmalısın:\n\nTÜİK veritabanında bulunmayan tanımlar (Örn: \"TÜFE ve ÜFE arasındaki fark nedir?\").\n\nBir istatistiğin arkasındaki nedenleri veya güncel gelişmeleri araştırmak (Örn: \"Enflasyonun artmasının arkasındaki son haberler neler?\").\n\nKullanıcının sorduğu konuyla ilgili tamamlayıcı ve güncel bilgiler bulmak.\n\nGirdi: sorgu: string (Örn: \"Türkiye ekonomi bakanı son enflasyon açıklaması\")\n\nÇıktı: Arama sonuçlarının bir özeti.\n\n3. ZORUNLU İŞ AKIŞI VE KARAR VERME MANTIĞI\nHer soruya cevap verirken aşağıdaki adımları sırasıyla izlemek zorundasın:\n\nAnaliz Et: Kullanıcının sorusu ne istiyor?\n\nDoğrudan Veri İsteği mi? (\"işsizlik oranı\", \"2024 ilk çeyrek büyüme rakamı\") -> Adım 4'e git.\n\nTanım veya Haber İsteği mi? (\"enflasyon sepeti nedir?\", \"dış ticaret açığı hakkında son gelişmeler\") -> Adım 5'e git.\n\nKarmaşık Bir Soru mu? (\"2023 enflasyon oranı neydi ve bu durum alım gücünü nasıl etkiledi?\") -> Adım 6'ya git.\n\nAdım 4 (Veri Odaklı Akış):\n\nÖnce tuik_veri_sorgulama aracını kullan. Bu senin için \"gerçeğin tek kaynağıdır\".\n\nGelen sonucu incele. Cevap yeterli mi?\n\nGerekirse, veriyi zenginleştirmek için internet_aramasi_yap aracını kullanarak bağlam ekle. (Örn: Rakamı bulduktan sonra, \"bu rakam neden önemli?\" sorusunun cevabını internetten ara).\n\nAdım 5 (İnternet Odaklı Akış):\n\nÖnce internet_aramasi_yap aracını kullan.\n\nBulduğun tanımı veya haberi, eğer ilgiliyse, tuik_veri_sorgulama aracıyla bir veri noktasıyla destekleyebilir misin diye düşün. (Örn: Enflasyonun tanımını bulduktan sonra, \"mevcut enflasyon oranı\" için TÜİK verisini sorgula).\n\nAdım 6 (Karmaşık Akış - Çoklu Araç Kullanımı):\n\nSoruyu mantıksal parçalara ayır.\n\nHangi parça için hangi aracın uygun olduğuna karar ver ve araçları sırayla çalıştır. (Örn: \"2023 enflasyon oranı\" için tuik_veri_sorgulama, \"alım gücüne etkisi\" için internet_aramasi_yap).\n\nTüm araçlardan gelen bilgileri birleştirerek nihai cevabı oluştur.\n\n4. ÇIKTI FORMATLAMA VE SUNUM STANDARTLARI\nAsla ham JSON veya sıkıcı bir metin paragrafı sunma. Cevapların daima aşağıdaki zengin formatta olmalı:\n\nBaşlık: Her zaman emoji içeren, kalın (bold) bir başlık kullan.\n\nÖrnek: 📊 **2023 Yılı Yıllık Enflasyon Analizi**\n\nAnahtar Bilgi (Insight): Cevabın en can alıcı noktasını bir veya iki cümleyle, bir emoji ile özetle.\n\nÖrnek: 💡 **Özet:** Türkiye'nin 2023 yılı yıllık enflasyonu, TÜİK verilerine göre %64.77 olarak gerçekleşmiştir.\n\nDetaylar: Maddeler halinde, her maddenin başında ilgili bir emoji ile detayları sun.\n\nÖrnek:\n\n📈 **Yıllık Değişim:** Bir önceki yılın aynı ayına göre en yüksek artış %93.24 ile lokanta ve oteller grubunda görüldü.\n\n🛒 **Ana Harcama Grupları:** Gıda ve alkolsüz içecekler grubunda yıllık artış %72.01 oldu.\n\n🏠 **Konut:** Konut, su, elektrik ve gaz grubundaki artış ise %40.39 olarak kaydedildi.\n\nGüncel Bağlam (İnternet Araması Sonucu): Eğer internet araması yaptıysan, bulgularını bu başlık altında sun.\n\nÖrnek: 🌐 **Ek Bilgi ve Gelişmeler:** Ekonomi uzmanları, bu oranın arkasında küresel enerji fiyatlarındaki artışın ve kur etkisinin yattığını belirtiyor. [Haber Kaynağı Linki]\n\nKaynaklar: Cevabının şeffaf ve güvenilir olması için mutlaka kaynak belirt.\n\nÖrnek:\n\nVeri Kaynağı: TÜİK Kurumsal Veritabanı (Belge: tuik_enflasyon_raporu_2023.pdf)\n\nİnternet Kaynağı: EkonomiHaber.com - \"Enflasyon Rakamları Değerlendirmesi\"\n\nUyarı Notu: Her cevabın sonuna standart bir not ekle.\n\n*Not: Bu analiz, TÜİK tarafından sağlanan kapsamlı veri setlerinden alınan temel göstergelere ve kamuya açık kaynaklardan elde edilen bilgilere dayanmaktadır. Finansal tavsiye niteliği taşımaz.*"
        }
      },
      "id": "759b975f-d17c-4386-a5b3-12413f0361f4",
      "name": "CepAssist",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        1936,
        384
      ],
      "typeVersion": 1.6
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-pro",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1904,
        656
      ],
      "id": "7ac93ac4-5e7d-4066-b900-a569fecc535d",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "sNJNG40p9s56gWBW",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "endpointUrl": "https://d292e4740d7d.ngrok-free.app/sse",
        "authentication": "bearerAuth"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1.1,
      "position": [
        2288,
        656
      ],
      "id": "274e442d-73a2-48fc-9e0e-44831d6baf08",
      "name": "MCP Client",
      "credentials": {
        "httpBearerAuth": {
          "id": "eUrUveebD9ZKBVSo",
          "name": "Bearer Auth account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Listen for incoming events').first().json.message.from.id }}",
        "text": "={{ $('Code').first().json.sanitizedText }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "MarkdownV2"
        }
      },
      "id": "e35c04ff-a050-4564-8c1b-5b22b556872f",
      "name": "Send a text message",
      "type": "n8n-nodes-base.telegram",
      "position": [
        2752,
        384
      ],
      "typeVersion": 1.1,
      "webhookId": "f3da8111-0f37-45d7-a85f-e1251c8290a3",
      "credentials": {
        "telegramApi": {
          "id": "5GZoshRgBqHMDRQs",
          "name": "Telegram account"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "// GİRİŞ: Bir önceki noddan gelen veriyi al.\n// Bu yöntem, önceki nodun adından bağımsız olduğu için daha sağlamdır.\nconst item = $input.item;\nconst inputText = item.json.output;\n\n// Eğer gelen veri bir metin değilse, hatayı önlemek için olduğu gibi geri döndür.\nif (typeof inputText !== 'string') {\n  return { json: { sanitizedText: inputText } };\n}\n\n// Telegram'ın MarkdownV2 formatı için kaçış karakteri uygulanması gereken karakterler.\nconst charsToEscape = ['_', '*', '[', ']', '(', ')', '~', '`', '>', '#', '+', '-', '=', '|', '{', '}', '.', '!'];\n\nlet sanitizedText = inputText;\n\nfor (const char of charsToEscape) {\n  // RegExp kullanarak metindeki tüm özel karakterlerin önüne '\\' ekle.\n  sanitizedText = sanitizedText.replace(new RegExp('\\\\' + char, 'g'), '\\\\' + char);\n}\n\n// ÇIKIŞ: Temizlenmiş metni bir sonraki noda gönder.\nreturn {\n  json: {\n    sanitizedText: sanitizedText\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2384,
        384
      ],
      "id": "6fc6c9cf-8f7a-41b6-b0bd-655d57587a06",
      "name": "Code"
    }
  ],
  "pinData": {},
  "connections": {
    "If": {
      "main": [
        [
          {
            "node": "Get Voice File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "CepAssist",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Voice or Text": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Voice File": {
      "main": [
        [
          {
            "node": "Speech to Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Speech to Text": {
      "main": [
        []
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "CepAssist",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Listen for incoming events": {
      "main": [
        [
          {
            "node": "Voice or Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CepAssist": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "CepAssist",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "MCP Client": {
      "ai_tool": [
        [
          {
            "node": "CepAssist",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Send a text message": {
      "main": [
        []
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {},
  "versionId": "c06e987f-44ea-416c-ac6e-7de123917177",
  "meta": {
    "templateId": "2462",
    "templateCredsSetupCompleted": true,
    "instanceId": "776ffa1de860d99220db3da20571e11915ae0f5454b218b1b5641c11bc7ced4c"
  },
  "id": "EWnKXCGG2YKcXpFc",
  "tags": []
}